{"version":3,"sources":["../resources/images/Acme-corp.png","utils/chatUsers.js","redux/reducers/index.js","redux/reducers/message.js","redux/reducers/users.js","redux/store.js","components/chatMemberList.jsx","utils/sharedFunctions.js","utils/constants.js","components/sendMessageForm.jsx","components/userSelector.jsx","components/header.jsx","components/index.jsx","components/message.jsx","components/messageList.jsx","components/searchTable.jsx","section/ChatSection.jsx","section/SearchSection.jsx","section/index.jsx","redux/actions/message.js","container/ChatContainer.jsx","container/index.jsx","page/index.jsx","page/ChatPage.jsx","App.js","index.js"],"names":["module","exports","__webpack_require__","p","usersMacked","id","name","image","combineReducers","message","state","arguments","length","undefined","action","type","Math","random","text","date","userMessage","users","store","createStore","reducers","chatMemberList","Component","constructor","props","super","this","fetchChatMembers","unique","messageUsers","messages","map","m","Set","render","React","createElement","className","key","src","alt","findUserSelected","userID","filter","u","Number","constants","userSelector","sendMessageDefaultText","searchMessageDefaultText","SendMessageForm","handleUserSelected","user","userSelected","setState","handleSubmitMessage","addNewMessage","moment","messageValue","handleSubmit","event","preventDefault","getInitialState","onSubmit","component","defaultText","Button","shape","icon","onClick","showModal","Input","placeholder","disabled","value","onChange","e","target","size","UserSelector","handleButtonClick","info","handleMenuClick","menuItems","Menu","Item","Dropdown","overlay","Icon","Header","logo","components","handleSameMessage","rightDirection","handleNewAuthorMessage","format","sameAuthor","sameHour","messageList","compareMinuteswithMessages","currentDate","lastMessage","diff","sendMessageForm","header","searchTable","Table","columns","title","dataIndex","dataSource","ChatSection","visible","handleOk","handleCancel","componentDidUpdate","prevProps","prevState","scrollToBottom","thing","refs","scrollTop","scrollHeight","clientHeight","section","SearchSection","ref","Option","Select","Search","handleSearch","order","messagesToTable","handleChange","descOrder","a","b","ascOrder","messagesReformatted","newMessages","searchedMessages","includes","callback","setTimeout","ordernedMessages","sort","Modal","onOk","onCancel","width","footer","defaultValue","enterButton","onSearch","addMessage","connect","container","ChatContainer","dispatch","bindActionCreators","messageActions","page","ChatPage","App","Provider","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d922aa51.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Acme-corp.82be7c71.png\";","export const usersMacked = [\n    {   \n        id: 1, \n        name: \"Bugs Bunny\", \n        image: \"/images/bugs_bunny.jpg\"     \n    },\n    {   \n        id: 2, \n        name: \"Tweety\", \n        image: \"/images/tweety.png\"     \n    },\n    {   \n        id: 3, \n        name: \"Daffy Duck\", \n        image: \"/images/daffy_duck.png\"     \n    },\n    {   \n        id: 4, \n        name: \"Tasmanian Devil\", \n        image: \"/images/tasmanian_devil.png\"     \n    },\n    {   \n        id: 5, \n        name: \"Porky Pig\", \n        image: \"/images/porky_pig.png\"     \n    },\n    {   \n        id: 6, \n        name: \"Marvin the Martian\", \n        image: \"/images/marvin.png\"     \n    },\n    {   \n        id: 7, \n        name: \"Elmer Fudd\", \n        image: \"/images/elmer_fudd.png\"     \n    },\n    {   \n        id: 8, \n        name: \"Yosemite Sam\", \n        image: \"/images/yosemite_sam.png\"     \n    },\n    {   \n        id: 9, \n        name: \"Road Runner\", \n        image: \"/images/road_runner.png\"     \n    },\n    {   \n        id: 10, \n        name: \"Wile E. Coyote\", \n        image: \"/images/wile_e_coyote.png\"     \n    }\n];","import message from './message';\nimport users from './users';\nimport { combineReducers } from 'redux';\n\nexport default combineReducers({\n    message,\n    users,\n})","export default function message(state = [], action) {\n    switch (action.type) {\n        case 'ADD_MESSAGE':\n            return [ ...state, {\n                id: Math.random(), \n                text: action.text,\n                date: action.date,\n                userMessage: action.userMessage,\n            }]\n        default:     \n            return state;\n    }\n}","import { usersMacked } from '../../utils/chatUsers'\n\nexport default function users(state = [], action) {\n    return state = usersMacked;\n}","import { createStore } from 'redux';\nimport reducers from './reducers'\n\nconst store = createStore((reducers));\n\nexport default store;","import React, { Component } from 'react'\n\nclass chatMemberList extends Component {\n\n    constructor(props) {\n        super()\n    }\n\n    fetchChatMembers = () => {\n        let unique = null;\n        let messageUsers = [];\n        if (this.props.messages) {\n            messageUsers = this.props.messages.map(m => m.userMessage);\n            unique = [ ...new Set( messageUsers ) ];\n        }\n        return unique;\n    }\n\n    render() {\n        const users = this.fetchChatMembers();\n\n        return (\n            <div>\n                <h1 className=\"chatMemberTitle\">Chat Members</h1>\n                {\n                    users !== null ?\n                        users.map(m => (\n                            <div className=\"chatMemberContext\" key={m.id}>\n                                <img className=\"chatMemberImage\" src={m.image} alt=\"logo img\"/>\n                                <h4 className=\"chatMemberName\">{m.name}</h4>\n                            </div>\n                        )) \n                    : \n                        null\n                }\n            </div>\n        )\n    }\n}\n\nexport default chatMemberList;","const findUserSelected = (userID, users) => {\n    const userSelected = users.filter(u => u.id === Number(userID));\n    return userSelected[0];\n}\n\nexport default findUserSelected;","const userSelector = {\n    sendMessageDefaultText: \"Choise an User to send a Message\",\n    searchMessageDefaultText: \"Sent by\"\n};\n\nconst constants ={\n    userSelector,\n}\n\nexport default constants;","import React, { Component } from 'react';\nimport component from '../components';\nimport { Input, Button } from 'antd';\nimport moment from 'moment';\nimport findUserSelected from '../utils/sharedFunctions';\nimport constants from '../utils/constants';\n\n\nclass SendMessageForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = this.getInitialState()\n    }\n\n    getInitialState() {\n        return {\n            userSelected: 0,\n            messageValue: '',\n        }\n    }\n\n    handleUserSelected = user => {\n        const userSelected = findUserSelected(user, this.props.users);\n        this.setState({ userSelected });\n    }\n\n    handleSubmitMessage = () => {\n        this.props.addNewMessage({            \n            user: this.state.userSelected, \n            date: moment(),\n            text: this.state.messageValue,\n        }\n        );\n        this.setState({ messageValue: '' })\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.handleSubmitMessage();\n    }\n\n    render() {\n        const {\n            userSelected,\n            messageValue,\n        } = this.state;\n        const {\n            users,\n        } = this.props;\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <div className=\"sendMessageContext\">\n                    <div className=\"selectorMessage\">\n                        <component.userSelector\n                            userSelected={userSelected}\n                            handleUserSelected={this.handleUserSelected}\n                            users={users}\n                            defaultText={constants.userSelector.sendMessageDefaultText}\n                        />         \n                    </div>\n                    <Button shape=\"circle\" type=\"primary\"  icon=\"search\" onClick={this.props.showModal} />\n                    <div className=\"inputMessage\">\n                        <Input\n                            placeholder=\"Type a Message\"\n                            disabled={userSelected === 0}\n                            value={messageValue}\n                            onChange={e => this.setState({ messageValue: e.target.value })} />\n                    </div>\n                    <div className=\"sendButton\">\n                        <Button\n                            type=\"primary\"\n                            shape=\"round\"\n                            icon=\"rocket\"\n                            size='large'\n                            disabled={messageValue === \"\"}\n                            onClick={this.handleSubmitMessage}\n                        >\n                            Send\n                        </Button>\n                    </div>\n                </div>\n            </form>\n        );\n    };\n\n}\n\nexport default SendMessageForm;","import React, { Component} from 'react';\nimport { Menu, Dropdown, Icon, Button, message } from 'antd';\n\n\nclass UserSelector extends Component {\n\n  constructor(props) {\n    super()\n  }\n\n  handleButtonClick = (e) => {\n    message.info('Click on left button.');\n  }\n\n  handleMenuClick = (e) => {\n    this.props.handleUserSelected(e.key)\n  }\n\n  menuItems = () => {\n    if (this.props.users) {\n      return (\n        <Menu onClick={(this.handleMenuClick)} className=\"menuConteiner\">\n          {\n            this.props.users.map(u => {\n              return (\n                <Menu.Item className=\"userItemMenu\" key={u.id}>\n                      <img className=\"userImage\" src={u.image} alt=\"logo img\"/>\n                      <h4 className=\"nameItem\">{u.name}</h4>\n                </Menu.Item>\n              )\n            })\n          }\n        </Menu>\n      )\n    }\n    return <Menu />;\n  };\n\nrender() {\n\n    const { userSelected, defaultText } = this.props;\n\n    return (\n      <div id=\"components-dropdown-userSelector-dropdown-button\">\n        <Dropdown className=\"DropDownMenu\" overlay={this.menuItems()}>\n          <Button>\n            {\n              userSelected.id > 0 ? \n              <div className=\"userItemMenu\">\n                <img className=\"userImage\" src={userSelected.image} alt=\"logo img\"/>\n                  <h4 className=\"nameItem\">{userSelected.name}</h4>\n              </div> : \n              <div>\n                {defaultText}\n                <Icon className=\"searchIcon\" type=\"down\" />\n              </div>\n            }            \n          </Button>\n        </Dropdown>\n      </div>\n    );\n  }\n}\n\nexport default UserSelector;","import React from 'react';\nimport logo from '../../resources/images/Acme-corp.png';\n\nconst Header = () => (\n    <div className=\"headerContainer\">\n        <div className=\"logoContent\">\n            <img className=\"headerImg\" src={logo} alt=\"logo img\"/>            \n        </div>\n        <div className=\"titleContent\">\n            <h1 className=\"headerText\">ACME Discussions</h1>\n        </div>\n    </div>\n)\n\nexport default Header;","import chatMemberList from './chatMemberList';\nimport message from './message';\nimport messageList from './messageList';\nimport sendMessageForm from './sendMessageForm';\nimport userSelector from './userSelector';\nimport header from './header';\nimport searchTable from './searchTable';\n\nexport default {\n    chatMemberList,\n    message,\n    messageList,\n    sendMessageForm,\n    userSelector,\n    header,\n    searchTable,\n}","import React, { Component } from 'react';\nimport moment from 'moment';\n\n\nexport default class Message extends Component {\n\n    constructor(props) {\n        super()\n    }\n\n    handleSameMessage = (rightDirection, message) => (\n        <div className=\"messageDisplay\">\n                <div className={rightDirection ? \"right messageText\" : \"left messageText\"}>{message.text}</div>\n        </div> \n    )\n\n    handleNewAuthorMessage = (rightDirection, message) => (\n        <div className=\"messageDisplay\">\n                <div className={rightDirection ? \"rightHeader messageHeader\" : \"leftHeader messageHeader\"}>{<img className=\"messageImage\" src={message.userMessage.image} alt=\"logo img\"/>} {message.userMessage.name}, {moment(message.date).format('LT')}</div>\n                <div className={rightDirection ? \"right messageText\" : \"left messageText\"}>{message.text}</div>\n        </div>\n    )\n\n    render() {\n        const {\n            message,\n            sameAuthor,\n            sameHour,\n            rightDirection,\n        } = this.props;\n        return (\n            <div className=\"messageContext\" id=\"inner\">\n                {\n                    sameHour && sameAuthor ?\n                        this.handleSameMessage(rightDirection, message)\n                    :\n                        this.handleNewAuthorMessage(rightDirection, message)\n                }\n            </div>\n\n        )\n    }\n};","import React, { Component } from 'react'\nimport components from '../components'\n\nexport default class MessageList extends Component {\n\n    constructor(props) {\n        super()\n    }\n\n    compareMinuteswithMessages = (currentDate, lastMessage) => {\n        const minutes = (currentDate.diff(lastMessage.date, 'minutes'));\n        return minutes < 1 ? true : false;\n    }\n\n    render() {\n        const { messages } = this.props;\n        let sameAuthor, sameHour = false;\n        let rightDirection = true;\n        let lastMessage = null;\n        return (\n            <div>\n                {messages.map(m => {\n                    if (lastMessage !== null) {\n                        sameAuthor = m.userMessage.name === lastMessage.userMessage.name || false;\n                        if (sameAuthor) {\n                            sameHour = this.compareMinuteswithMessages(m.date, lastMessage);\n                        } else {\n                            sameHour = false;\n                            rightDirection = !rightDirection;\n                        }\n                    }\n                    lastMessage = m;\n                    return (\n                        <components.message\n                            key={m.id}\n                            message={m}\n                            sameAuthor={sameAuthor}\n                            sameHour={sameHour}\n                            rightDirection={rightDirection}\n                        />\n                        )\n                    }\n                )}\n            </div>\n        )\n    }\n}","import React from 'react'\nimport { Table } from 'antd';\n\nexport default props => {\n\n    const columns = [\n        {\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name',\n        },\n        {\n          title: 'Date',\n          dataIndex: 'date',\n          key: 'date',\n        },\n        {\n          title: 'Message',\n          dataIndex: 'message',\n          key: 'message',\n        }\n    ];\n    \n    return (\n        <Table columns={columns} dataSource={props.messages} />\n    );\n}","import React, { Component } from 'react'\nimport component from '../components'\nimport section from '../section';\n\n\nclass ChatSection extends Component {\n\n    constructor(props) {\n        super()\n        this.state = this.getInitialState();\n    }\n\n    getInitialState() {\n        return {\n            visible: false,\n        }\n    }\n    \n    componentDidUpdate(prevProps, prevState){\n        this.scrollToBottom();\n      }\n      \n    scrollToBottom() {\n        const {thing} = this.refs;\n        thing.scrollTop = thing.scrollHeight - thing.clientHeight;\n    }\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    render() {\n\n        const {\n            messages,\n            users,\n            addNewMessage,\n        } = this.props;\n        const { visible } = this.state;\n\n        return (\n            <div>\n                <header><component.header /></header>\n                <div id='main'>\n                    <section.SearchSection\n                        users={users}\n                        messages={messages}\n                        handleCancel={this.handleCancel}\n                        handleOk={this.handleOk}\n                        visible={visible}\n\n                    />\n                    <article ref={`thing`} ><component.messageList messages={messages}/></article>\n                    <nav>\n                        <component.chatMemberList\n                            messages={messages}\n                        />\n                    </nav>\n                </div>\n                <footer>\n                    <component.sendMessageForm\n                        users={users}\n                        addNewMessage={addNewMessage}\n                        showModal={this.showModal}\n                    />\n                </footer>\n            </div>\n        )\n    }\n}\n\nexport default ChatSection;","import React, { Component } from 'react'\nimport { Modal, Input, Select } from 'antd';\nimport component from '../components';\nimport findUserSelected from '../utils/sharedFunctions';\nimport constants from '../utils/constants';\nimport moment from 'moment';\n\nconst Option = Select.Option;\nconst Search = Input.Search;\n\nclass SearchSection extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = this.getInitialState()\n    }\n\n    getInitialState() {\n        return {\n            userSelected: 0,\n            order: null,\n            messagesToTable: [],\n            text: '',\n        }\n    }\n\n    handleUserSelected = user => {\n        const userSelected = findUserSelected(user, this.props.users);\n        this.handleSearch(this.state.text);\n        this.setState({ userSelected });\n    }\n\n    handleOk = e => {\n        this.props.handleOk();\n        this.setState({\n            userSelected: 0,\n            order: null,\n            messagesToTable: [],\n            text: '',\n        })\n    };\n\n    handleCancel = e => {\n        this.props.handleCancel();\n        this.setState({\n            userSelected: 0,\n            order: null,\n            messagesToTable: [],\n            text: '',\n        })\n    };\n\n    handleChange = (value) => {\n        this.handleSearch(this.state.text);\n        this.setState({ order: value })\n    };\n\n    descOrder = (a, b) => (\n        a.date - b.date\n    )\n    \n    ascOrder = (a, b) => (\n        b.date - a.date\n    )\n\n    messagesReformatted = (messages) => {\n        const newMessages = messages.map(message => (\n            {\n                name: message.userMessage.name,\n                date: moment(message.date).format('LT'),\n                message: message.text,\n            }\n        ))\n        return this.setState({ messagesToTable: newMessages })\n    }\n\n    searchedMessages = (messages, value, userSelected) => {\n        if (userSelected.id > 0) {\n           return messages\n                .filter(message => message.text.includes(value))\n                .filter(message => message.userMessage.id === userSelected.id)\n\n        } else {\n            return messages\n                .filter(message => message.text.includes(value))\n\n        }    \n    }\n     \n    handleSearch = (value, callback) => {\n        setTimeout(()=> {\n            if (value !== '') {\n                const { messages } = this.props;\n                const { userSelected, order } = this.state;\n                let searchedMessages = this.searchedMessages(messages, value, userSelected);\n                let ordernedMessages = searchedMessages.sort(order === 'new' ? this.ascOrder : this.descOrder)\n                return this.messagesReformatted(ordernedMessages);\n            }            \n         }, 0)\n        return null;\n    }\n\n    render() {\n        const { userSelected, order, messagesToTable, text } = this.state;\n        const { users, visible } = this.props;\n        return (\n            <div>\n                <Modal\n                    title=\"Search Message\"\n                    visible={visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    width={1000}\n                    footer={null}\n                    >\n                    <div className=\"modalContext\">\n                        <component.userSelector\n                            userSelected={userSelected}\n                            handleUserSelected={this.handleUserSelected}\n                            users={users}\n                            defaultText={constants.userSelector.searchMessageDefaultText}\n                        />\n                        <Select defaultValue=\"Order\"  onChange={this.handleChange}>\n                            <Option value={null}>Order by</Option>\n                            <Option value=\"new\">Newest First</Option>\n                            <Option value=\"old\">Oldest First</Option>\n                        </Select> \n                        <Search\n                            className=\"searchInput\"\n                            placeholder=\"input search text\"\n                            enterButton=\"Search\"\n                            size=\"large\"\n                            value={text}\n                            onChange={e => this.setState({ text: e.target.value })}\n                            disabled={order === null}\n                            onSearch={value => this.handleSearch(value)}\n                        />\n                    </div>\n                    { messagesToTable.length <= 0 ? <h3 className=\"noData\">No Result Found</h3> : <component.searchTable messages={messagesToTable}/>}\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default SearchSection;\n","import ChatSection from './ChatSection'\nimport SearchSection from './SearchSection'\n\nexport default {\n    ChatSection,\n    SearchSection,\n}","export function addMessage(message) {\n    return {\n        type: 'ADD_MESSAGE',\n        text: message.text,\n        date: message.date,\n        userMessage: message.user\n    }\n}","import React, { Component } from 'react';\nimport section from '../section'\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux'\n\nimport * as messageActions from '../redux/actions/message';\n\nclass ChatContainer extends Component {\n    constructor(props) {\n        super()\n    }\n\n    addNewMessage = (message) => {\n        this.props.addMessage(message);\n    }\n\n    render() {\n        const {\n            message,\n            users,\n        } = this.props;\n        return (\n            <div>\n                <section.ChatSection\n                    addNewMessage={this.addNewMessage}\n                    messages={message}\n                    users={users}\n                />\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    message: state.message,\n    users: state.users,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators(messageActions, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatContainer);","import ChatContainer from './ChatContainer'\n\nexport default {\n    ChatContainer,\n}","import ChatPage from './ChatPage'\n\nexport default {\n    ChatPage,\n}","import React from 'react';\nimport container from '../container';\n\nexport default props => {\n    return (\n        <div>\n            <container.ChatContainer />\n        </div>\n    );\n}","import React, { Component } from 'react';\nimport '../resources/css/app.scss';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport page from './page';\nimport 'antd/dist/antd.css';\n\nclass App extends Component {\n  render() {\n    return (\n\t\t<Provider store={store}>\n      <div>\n\t\t\t  <page.ChatPage />\n      </div>\n\t\t</Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}